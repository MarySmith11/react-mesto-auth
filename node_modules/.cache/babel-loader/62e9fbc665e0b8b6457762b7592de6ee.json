{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._baseHeaders = options.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._baseHeaders\n    }).then(res => this._getResponse(res, 'Произошла ошибка при получении информации о пользователе'));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._baseHeaders\n    }).then(res => this._getResponse(res, 'Произошла ошибка при получении карточек'));\n  }\n\n  updateUserProfile(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._baseHeaders,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._getResponse(res, 'Произошла ошибка при обновлении профиля пользователя'));\n  }\n\n  updateUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._baseHeaders,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._getResponse(res, 'Произошла ошибка при обновлении аватара пользователя'));\n  }\n\n  addNewCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._baseHeaders,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._getResponse(res, 'Произошла ошибка при добавлении новой карточки'));\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._baseHeaders\n    }).then(res => this._getResponse(res, 'Произошла ошибка при удалении карточки'));\n  }\n\n  likeAction(cardId, type) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: type,\n      headers: this._baseHeaders\n    }).then(res => this._getResponse(res, 'Произошла ошибка при постановке лайка'));\n  }\n\n  _getResponse(res, errorText) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`${errorText}: ${res.status} ${res.statusText}`);\n  }\n\n}\n\nconst apiInstance = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '06c6d84b-91cf-46b1-9787-cc57bf55dfba',\n    'Content-Type': 'application/json'\n  }\n});\nexport default apiInstance;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_baseHeaders","headers","getUserInfo","fetch","then","res","_getResponse","getInitialCards","updateUserProfile","name","about","method","body","JSON","stringify","updateUserAvatar","avatar","addNewCard","link","removeCard","cardId","likeAction","type","errorText","ok","json","Promise","reject","status","statusText","apiInstance","authorization"],"sources":["C:/Users/79130/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._baseHeaders = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(\r\n            `${this._baseUrl}/users/me`,\r\n            {\r\n                headers: this._baseHeaders\r\n            }\r\n        ).then((res) => this._getResponse(res, 'Произошла ошибка при получении информации о пользователе'));\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(\r\n            `${this._baseUrl}/cards`,\r\n            {\r\n                headers: this._baseHeaders\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при получении карточек'));\r\n    }\r\n\r\n    updateUserProfile({ name, about }) {\r\n        return fetch(\r\n            `${this._baseUrl}/users/me`,\r\n            {\r\n                method: 'PATCH',\r\n                headers: this._baseHeaders,\r\n                body: JSON.stringify({\r\n                    name,\r\n                    about\r\n                })\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при обновлении профиля пользователя'));\r\n    }\r\n\r\n    updateUserAvatar(avatar) {\r\n        return fetch(\r\n            `${this._baseUrl}/users/me/avatar`,\r\n            {\r\n                method: 'PATCH',\r\n                headers: this._baseHeaders,\r\n                body: JSON.stringify({\r\n                    avatar\r\n                })\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при обновлении аватара пользователя'));\r\n    }\r\n\r\n    addNewCard({ name, link }) {\r\n        return fetch(\r\n            `${this._baseUrl}/cards`,\r\n            {\r\n                method: 'POST',\r\n                headers: this._baseHeaders,\r\n                body: JSON.stringify({\r\n                    name,\r\n                    link\r\n                })\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при добавлении новой карточки'));\r\n    }\r\n\r\n    removeCard(cardId) {\r\n        return fetch(\r\n            `${this._baseUrl}/cards/${cardId}`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: this._baseHeaders\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при удалении карточки'));\r\n    }\r\n\r\n    likeAction(cardId, type) {\r\n        return fetch(\r\n            `${this._baseUrl}/cards/likes/${cardId}`,\r\n            {\r\n                method: type,\r\n                headers: this._baseHeaders\r\n            }\r\n        )\r\n            .then((res) => this._getResponse(res, 'Произошла ошибка при постановке лайка'));\r\n    }\r\n\r\n    _getResponse(res, errorText) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`${errorText}: ${res.status} ${res.statusText}`);\r\n    }\r\n} \r\n\r\nconst apiInstance = new Api( \r\n    { \r\n      baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42', \r\n      headers: { \r\n        authorization: '06c6d84b-91cf-46b1-9787-cc57bf55dfba', \r\n        'Content-Type': 'application/json' \r\n      } \r\n    } \r\n); \r\n\r\nexport default apiInstance;"],"mappings":"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"},"metadata":{},"sourceType":"module"}