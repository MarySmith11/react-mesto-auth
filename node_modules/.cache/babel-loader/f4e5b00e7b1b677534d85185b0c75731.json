{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": \"somepassword\",\n      \"email\": \"email@yandex.ru\"\n    })\n  }).then(response => {\n    if (response.status === 400) {\n      throw new Error('Что-то пошло не так! Попробуйте ещё раз.');\n    } else {\n      return response.json();\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    return {\n      error: err.message\n    };\n  });\n};\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    if (response.status === 400 || response.status === 401) {\n      throw new Error('Что-то пошло не так! Попробуйте ещё раз.');\n    } else {\n      return response.json();\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","res","catch","err","error","message","login","console","log","checkToken","token","data"],"sources":["C:/Users/79130/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": \"somepassword\",\n      \"email\": \"email@yandex.ru\"\n    })\n  })\n    .then((response) => {\n      if (response.status === 400) {\n        throw new Error('Что-то пошло не так! Попробуйте ещё раз.');\n      } else {\n        return response.json();\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch(err => {\n      return { error: err.message };\n    });\n}\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then((response) => {\n      if (response.status === 400 || response.status === 401) {\n        throw new Error('Что-то пошло не так! Попробуйте ещё раз.');\n      } else {\n        return response.json();\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => {\n      console.log(err);\n    });\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnB,YAAY,cADO;MAEnB,SAAS;IAFU,CAAf;EAL2B,CAAvB,CAAL,CAUJC,IAVI,CAUEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;MAC3B,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;IACD,CAFD,MAEO;MACL,OAAOF,QAAQ,CAACG,IAAT,EAAP;IACD;EACF,CAhBI,EAiBJJ,IAjBI,CAiBEK,GAAD,IAAS;IACb,OAAOA,GAAP;EACD,CAnBI,EAoBJC,KApBI,CAoBEC,GAAG,IAAI;IACZ,OAAO;MAAEC,KAAK,EAAED,GAAG,CAACE;IAAb,CAAP;EACD,CAtBI,CAAP;AAuBD,CAxBM;AA0BP,OAAO,MAAMC,KAAK,GAAG,CAAClB,KAAD,EAAQC,QAAR,KAAqB;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EAL2B,CAAvB,CAAL,CAOJO,IAPI,CAOEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;MACtD,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;IACD,CAFD,MAEO;MACL,OAAOF,QAAQ,CAACG,IAAT,EAAP;IACD;EACF,CAbI,EAcJJ,IAdI,CAcEK,GAAD,IAAS;IACb,OAAOA,GAAP;EACD,CAhBI,EAiBJC,KAjBI,CAiBEC,GAAG,IAAI;IACZI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EACD,CAnBI,CAAP;AAoBD,CArBM;AAuBP,OAAO,MAAMM,UAAU,GAAIC,KAAD,IAAW;EACnC,OAAOpB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAkB,UAASkB,KAAM;IAH1B;EAF0B,CAAzB,CAAL,CAQJd,IARI,CAQCK,GAAG,IAAIA,GAAG,CAACD,IAAJ,EARR,EASJJ,IATI,CASCe,IAAI,IAAIA,IATT,EAUJT,KAVI,CAUEC,GAAG,IAAI;IACZI,OAAO,CAACC,GAAR,CAAYL,GAAZ;EACD,CAZI,CAAP;AAaD,CAdM"},"metadata":{},"sourceType":"module"}