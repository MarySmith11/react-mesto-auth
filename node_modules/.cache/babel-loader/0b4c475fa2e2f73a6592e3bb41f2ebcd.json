{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79130\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ProtectedRoute from './ProtectedRoute';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport apiInstance from '../utils/api';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoToolTip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*стейт для блокировки отрисовки контента до проверки токена */\n  const [tokenChecked, setTokenChecked] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = React.useState(false);\n  const [registerMessage, setRegisterMessage] = React.useState(\"\");\n  const [registerSuccessfully, setRegisterSuccessfully] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [userEmail, setUserEmail] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt).then(res => {\n        if (res.data) {\n          if (!!res.data.email) {\n            setUserEmail(res.data.email);\n          }\n\n          setLoggedIn(true);\n          setTokenChecked(true);\n          history.push('/');\n        } else {\n          setLoggedIn(false);\n          localStorage.removeItem('jwt');\n          setTokenChecked(true);\n          history.push('/sign-in');\n        }\n      }).catch(err => console.log(err));\n    } else {\n      setTokenChecked(true);\n    }\n  };\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, [history.location.pathname]);\n  React.useEffect(() => {\n    apiInstance.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsInfoToolTipOpened(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n\n  const handleUpdateUser = userData => {\n    apiInstance.updateUserProfile(userData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function handleUpdateAvatar(userData) {\n    apiInstance.updateUserAvatar(userData.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    apiInstance.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const method = isLiked ? 'DELETE' : 'PUT'; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    apiInstance.likeAction(card._id, method).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    apiInstance.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    apiInstance.addNewCard(newCard).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleLogin(email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    auth.login(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        history.push('/');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleRegister(email, password) {\n    if (!email || !password) {\n      return;\n    }\n\n    auth.register(email, password).then(data => {\n      setRegisterSuccessfully(!data.error);\n\n      if (!data.error) {\n        setRegisterMessage('Вы успешно зарегистрировались!');\n      } else {\n        setRegisterMessage(data.error);\n      }\n\n      setIsInfoToolTipOpened(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleLogout() {\n    setLoggedIn(false);\n\n    if (localStorage.getItem('jwt')) {\n      localStorage.removeItem('jwt');\n    }\n  }\n\n  return tokenChecked && /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedIn: loggedIn,\n      userEmail: userEmail,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        component: Main,\n        exact: true,\n        path: \"/\",\n        loggedIn: loggedIn,\n        cards: cards,\n        onCardDelete: handleCardDelete,\n        onCardLike: handleCardLike,\n        onEditProfile: () => {\n          setIsEditProfilePopupOpen(true);\n        },\n        onAddPlace: () => {\n          setIsAddPlacePopupOpen(true);\n        },\n        onEditAvatar: () => {\n          setIsEditAvatarPopupOpen(true);\n        },\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        children: [/*#__PURE__*/_jsxDEV(Register, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          isOpen: isInfoToolTipOpened,\n          resultText: registerMessage,\n          isSuccess: registerSuccessfully,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n      name: \"confirm\",\n      buttonOnText: \"\\u0414\\u0430\",\n      onClose: closeAllPopups,\n      buttonOnClose: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups,\n      isOpen: isImagePopupOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 21\n  }, this);\n}\n\n_s(App, \"tYvaKIkdIW2h1gQcKPJj1L6grEk=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Route","Switch","useHistory","withRouter","Header","Main","Footer","ProtectedRoute","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","apiInstance","Login","Register","InfoToolTip","auth","App","tokenChecked","setTokenChecked","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoToolTipOpened","setIsInfoToolTipOpened","registerMessage","setRegisterMessage","registerSuccessfully","setRegisterSuccessfully","selectedCard","setSelectedCard","name","link","isImagePopupOpen","setIsImagePopupOpen","currentUser","setCurrentUser","userEmail","setUserEmail","loggedIn","setLoggedIn","history","handleTokenCheck","localStorage","getItem","jwt","checkToken","then","res","data","email","push","removeItem","catch","err","console","log","useEffect","location","pathname","getUserInfo","closeAllPopups","handleCardClick","card","handleUpdateUser","userData","updateUserProfile","handleUpdateAvatar","updateUserAvatar","avatar","cards","setCards","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","method","likeAction","newCard","state","map","c","handleCardDelete","removeCard","filter","handleAddPlaceSubmit","addNewCard","handleLogin","password","login","token","setItem","handleRegister","register","error","handleLogout"],"sources":["C:/Users/79130/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React from 'react';\nimport { Route, Switch, useHistory, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ProtectedRoute from './ProtectedRoute';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport apiInstance from '../utils/api';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoToolTip from './InfoTooltip';\nimport * as auth from '../utils/auth';\n\n\nfunction App() {\n\n  /*стейт для блокировки отрисовки контента до проверки токена */\n  const [tokenChecked, setTokenChecked] = React.useState(false);\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [isInfoToolTipOpened, setIsInfoToolTipOpened] = React.useState(false);\n  const [registerMessage, setRegisterMessage] = React.useState(\"\");\n  const [registerSuccessfully, setRegisterSuccessfully] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [userEmail, setUserEmail] = React.useState('');\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleTokenCheck = () => { \n    if (localStorage.getItem('jwt')) { \n      const jwt = localStorage.getItem('jwt'); \n      auth.checkToken(jwt) \n        .then((res) => { \n          if (res.data) { \n            if (!!res.data.email) { \n              setUserEmail(res.data.email); \n            } \n            setLoggedIn(true); \n            setTokenChecked(true); \n            history.push('/'); \n          } else { \n            setLoggedIn(false); \n            localStorage.removeItem('jwt'); \n            setTokenChecked(true); \n            history.push('/sign-in'); \n          } \n        }) \n        .catch(err => console.log(err)); \n    } else { \n      setTokenChecked(true); \n    } \n  } \n\n  React.useEffect(() => { \n    handleTokenCheck(); \n  }, [history.location.pathname]); \n\n  React.useEffect(() => {\n    apiInstance.getUserInfo().then((res) => {\n      setCurrentUser(res);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }, []);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsInfoToolTipOpened(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({ name: '', link: '' });\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  const handleUpdateUser = (userData) => {\n    apiInstance.updateUserProfile(userData).then((res) => {\n      setCurrentUser(res);\n      closeAllPopups();\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(userData) {\n    apiInstance.updateUserAvatar(userData.avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    apiInstance.getInitialCards().then((res) => {\n      setCards(res);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const method = isLiked ? 'DELETE' : 'PUT';\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    apiInstance.likeAction(card._id, method).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    apiInstance.removeCard(card._id).then(() => {\n      setCards((state) => state.filter((c) => c._id !== card._id));\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    apiInstance.addNewCard(newCard)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleLogin(email, password) {\n    if (!email || !password) {\n      return;\n    }\n    auth.login(email, password)\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n          history.push('/');\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  function handleRegister(email, password) {\n    if (!email || !password) {\n      return;\n    }\n    auth.register(email, password)\n      .then(data => {\n        setRegisterSuccessfully(!data.error);\n        if (!data.error) {\n          setRegisterMessage('Вы успешно зарегистрировались!');\n        } else {\n          setRegisterMessage(data.error);\n        }\n        setIsInfoToolTipOpened(true)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  function handleLogout() { \n    setLoggedIn(false); \n    if (localStorage.getItem('jwt')) { \n      localStorage.removeItem('jwt'); \n    } \n  } \n\n  return (\n    tokenChecked && <CurrentUserContext.Provider value={currentUser}>\n      <Header loggedIn={loggedIn} userEmail={userEmail} handleLogout={handleLogout} />\n      <Switch>\n        <ProtectedRoute component={Main} exact path=\"/\" loggedIn={loggedIn} cards={cards} onCardDelete={handleCardDelete} onCardLike={handleCardLike} onEditProfile={() => { setIsEditProfilePopupOpen(true) }} onAddPlace={() => { setIsAddPlacePopupOpen(true) }} onEditAvatar={() => { setIsEditAvatarPopupOpen(true) }} onCardClick={handleCardClick} />\n        <Route path=\"/sign-in\">\n          <Login onLogin={handleLogin} />\n        </Route>\n        <Route path=\"/sign-up\">\n          <Register onRegister={handleRegister} />\n          <InfoToolTip isOpen={isInfoToolTipOpened} resultText={registerMessage} isSuccess={registerSuccessfully} onClose={closeAllPopups} />\n        </Route>\n      </Switch>\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n      <PopupWithForm\n        title=\"Вы уверены?\"\n        name=\"confirm\"\n        buttonOnText=\"Да\"\n        onClose={closeAllPopups}\n        buttonOnClose={false}\n      />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} isOpen={isImagePopupOpen} />\n      <Footer />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,kBAAtD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAxC;EAEA,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDzB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAA5D;EACA,MAAM,CAACG,mBAAD,EAAsBC,sBAAtB,IAAgD3B,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAtD;EACA,MAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoD7B,KAAK,CAACuB,QAAN,CAAe,KAAf,CAA1D;EAEA,MAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgD/B,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAtD;EACA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCjC,KAAK,CAACuB,QAAN,CAAe,EAAf,CAA9C;EACA,MAAM,CAACW,oBAAD,EAAuBC,uBAAvB,IAAkDnC,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAxD;EAEA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCrC,KAAK,CAACuB,QAAN,CAAe;IAAEe,IAAI,EAAE,EAAR;IAAYC,IAAI,EAAE;EAAlB,CAAf,CAAxC;EACA,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CzC,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAhD;EAEA,MAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgC3C,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAtC;EAEA,MAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4B7C,KAAK,CAACuB,QAAN,CAAe,EAAf,CAAlC;EACA,MAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0B/C,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAhC;EAEA,MAAMyB,OAAO,GAAG7C,UAAU,EAA1B;;EAEA,MAAM8C,gBAAgB,GAAG,MAAM;IAC7B,IAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;MAC/B,MAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;MACAhC,IAAI,CAACkC,UAAL,CAAgBD,GAAhB,EACGE,IADH,CACSC,GAAD,IAAS;QACb,IAAIA,GAAG,CAACC,IAAR,EAAc;UACZ,IAAI,CAAC,CAACD,GAAG,CAACC,IAAJ,CAASC,KAAf,EAAsB;YACpBZ,YAAY,CAACU,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAZ;UACD;;UACDV,WAAW,CAAC,IAAD,CAAX;UACAzB,eAAe,CAAC,IAAD,CAAf;UACA0B,OAAO,CAACU,IAAR,CAAa,GAAb;QACD,CAPD,MAOO;UACLX,WAAW,CAAC,KAAD,CAAX;UACAG,YAAY,CAACS,UAAb,CAAwB,KAAxB;UACArC,eAAe,CAAC,IAAD,CAAf;UACA0B,OAAO,CAACU,IAAR,CAAa,UAAb;QACD;MACF,CAfH,EAgBGE,KAhBH,CAgBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBhB;IAiBD,CAnBD,MAmBO;MACLvC,eAAe,CAAC,IAAD,CAAf;IACD;EACF,CAvBD;;EAyBAtB,KAAK,CAACgE,SAAN,CAAgB,MAAM;IACpBf,gBAAgB;EACjB,CAFD,EAEG,CAACD,OAAO,CAACiB,QAAR,CAAiBC,QAAlB,CAFH;EAIAlE,KAAK,CAACgE,SAAN,CAAgB,MAAM;IACpBjD,WAAW,CAACoD,WAAZ,GAA0Bb,IAA1B,CAAgCC,GAAD,IAAS;MACtCZ,cAAc,CAACY,GAAD,CAAd;IACD,CAFD,EAEGK,KAFH,CAEUC,GAAD,IAAS;MAChBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAJD;EAKD,CAND,EAMG,EANH;;EAQA,MAAMO,cAAc,GAAG,MAAM;IAC3B3C,yBAAyB,CAAC,KAAD,CAAzB;IACAM,sBAAsB,CAAC,KAAD,CAAtB;IACAJ,sBAAsB,CAAC,KAAD,CAAtB;IACAE,wBAAwB,CAAC,KAAD,CAAxB;IACAY,mBAAmB,CAAC,KAAD,CAAnB;IACAJ,eAAe,CAAC;MAAEC,IAAI,EAAE,EAAR;MAAYC,IAAI,EAAE;IAAlB,CAAD,CAAf;EACD,CAPD;;EASA,MAAM8B,eAAe,GAAIC,IAAD,IAAU;IAChCjC,eAAe,CAACiC,IAAD,CAAf;IACA7B,mBAAmB,CAAC,IAAD,CAAnB;EACD,CAHD;;EAKA,MAAM8B,gBAAgB,GAAIC,QAAD,IAAc;IACrCzD,WAAW,CAAC0D,iBAAZ,CAA8BD,QAA9B,EAAwClB,IAAxC,CAA8CC,GAAD,IAAS;MACpDZ,cAAc,CAACY,GAAD,CAAd;MACAa,cAAc;IACf,CAHD,EAIGR,KAJH,CAIUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CANH;EAOD,CARD;;EAUA,SAASa,kBAAT,CAA4BF,QAA5B,EAAsC;IACpCzD,WAAW,CAAC4D,gBAAZ,CAA6BH,QAAQ,CAACI,MAAtC,EACGtB,IADH,CACSC,GAAD,IAAS;MACbZ,cAAc,CAACY,GAAD,CAAd;MACAa,cAAc;IACf,CAJH,EAKGR,KALH,CAKUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAPH;EASD;;EAED,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoB9E,KAAK,CAACuB,QAAN,CAAe,EAAf,CAA1B;EAEAvB,KAAK,CAACgE,SAAN,CAAgB,MAAM;IACpBjD,WAAW,CAACgE,eAAZ,GAA8BzB,IAA9B,CAAoCC,GAAD,IAAS;MAC1CuB,QAAQ,CAACvB,GAAD,CAAR;IACD,CAFD,EAEGK,KAFH,CAEUC,GAAD,IAAS;MAChBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAJD;EAKD,CAND,EAMG,EANH;;EAQA,SAASmB,cAAT,CAAwBV,IAAxB,EAA8B;IAC5B;IACA,MAAMW,OAAO,GAAGX,IAAI,CAACY,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAU3C,WAAW,CAAC2C,GAA3C,CAAhB;IACA,MAAMC,MAAM,GAAGL,OAAO,GAAG,QAAH,GAAc,KAApC,CAH4B,CAI5B;;IACAlE,WAAW,CAACwE,UAAZ,CAAuBjB,IAAI,CAACe,GAA5B,EAAiCC,MAAjC,EAAyChC,IAAzC,CAA+CkC,OAAD,IAAa;MACzDV,QAAQ,CAAEW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACN,GAAF,KAAUf,IAAI,CAACe,GAAf,GAAqBG,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;IACD,CAFD;EAGD;;EAED,SAASC,gBAAT,CAA0BtB,IAA1B,EAAgC;IAC9BvD,WAAW,CAAC8E,UAAZ,CAAuBvB,IAAI,CAACe,GAA5B,EAAiC/B,IAAjC,CAAsC,MAAM;MAC1CwB,QAAQ,CAAEW,KAAD,IAAWA,KAAK,CAACK,MAAN,CAAcH,CAAD,IAAOA,CAAC,CAACN,GAAF,KAAUf,IAAI,CAACe,GAAnC,CAAZ,CAAR;IACD,CAFD,EAEGzB,KAFH,CAEUC,GAAD,IAAS;MAChBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAJD;EAKD;;EAED,SAASkC,oBAAT,CAA8BP,OAA9B,EAAuC;IACrCzE,WAAW,CAACiF,UAAZ,CAAuBR,OAAvB,EACGlC,IADH,CACSC,GAAD,IAAS;MACbuB,QAAQ,CAAC,CAACvB,GAAD,EAAM,GAAGsB,KAAT,CAAD,CAAR;MACAT,cAAc;IACf,CAJH,EAKGR,KALH,CAKUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAPH;EAQD;;EAED,SAASoC,WAAT,CAAqBxC,KAArB,EAA4ByC,QAA5B,EAAsC;IACpC,IAAI,CAACzC,KAAD,IAAU,CAACyC,QAAf,EAAyB;MACvB;IACD;;IACD/E,IAAI,CAACgF,KAAL,CAAW1C,KAAX,EAAkByC,QAAlB,EACG5C,IADH,CACQE,IAAI,IAAI;MACZ,IAAIA,IAAI,CAAC4C,KAAT,EAAgB;QACdlD,YAAY,CAACmD,OAAb,CAAqB,KAArB,EAA4B7C,IAAI,CAAC4C,KAAjC;QACApD,OAAO,CAACU,IAAR,CAAa,GAAb;MACD;IACF,CANH,EAOGE,KAPH,CAOSC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CATH;EAUD;;EAED,SAASyC,cAAT,CAAwB7C,KAAxB,EAA+ByC,QAA/B,EAAyC;IACvC,IAAI,CAACzC,KAAD,IAAU,CAACyC,QAAf,EAAyB;MACvB;IACD;;IACD/E,IAAI,CAACoF,QAAL,CAAc9C,KAAd,EAAqByC,QAArB,EACG5C,IADH,CACQE,IAAI,IAAI;MACZrB,uBAAuB,CAAC,CAACqB,IAAI,CAACgD,KAAP,CAAvB;;MACA,IAAI,CAAChD,IAAI,CAACgD,KAAV,EAAiB;QACfvE,kBAAkB,CAAC,gCAAD,CAAlB;MACD,CAFD,MAEO;QACLA,kBAAkB,CAACuB,IAAI,CAACgD,KAAN,CAAlB;MACD;;MACDzE,sBAAsB,CAAC,IAAD,CAAtB;IACD,CATH,EAUG6B,KAVH,CAUSC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAZH;EAaD;;EAED,SAAS4C,YAAT,GAAwB;IACtB1D,WAAW,CAAC,KAAD,CAAX;;IACA,IAAIG,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;MAC/BD,YAAY,CAACS,UAAb,CAAwB,KAAxB;IACD;EACF;;EAED,OACEtC,YAAY,iBAAI,QAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAEqB,WAApC;IAAA,wBACd,QAAC,MAAD;MAAQ,QAAQ,EAAEI,QAAlB;MAA4B,SAAS,EAAEF,SAAvC;MAAkD,YAAY,EAAE6D;IAAhE;MAAA;MAAA;MAAA;IAAA,QADc,eAEd,QAAC,MAAD;MAAA,wBACE,QAAC,cAAD;QAAgB,SAAS,EAAEnG,IAA3B;QAAiC,KAAK,MAAtC;QAAuC,IAAI,EAAC,GAA5C;QAAgD,QAAQ,EAAEwC,QAA1D;QAAoE,KAAK,EAAE+B,KAA3E;QAAkF,YAAY,EAAEe,gBAAhG;QAAkH,UAAU,EAAEZ,cAA9H;QAA8I,aAAa,EAAE,MAAM;UAAEvD,yBAAyB,CAAC,IAAD,CAAzB;QAAiC,CAAtM;QAAwM,UAAU,EAAE,MAAM;UAAEE,sBAAsB,CAAC,IAAD,CAAtB;QAA8B,CAA1P;QAA4P,YAAY,EAAE,MAAM;UAAEE,wBAAwB,CAAC,IAAD,CAAxB;QAAgC,CAAlT;QAAoT,WAAW,EAAEwC;MAAjU;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAA,uBACE,QAAC,KAAD;UAAO,OAAO,EAAE4B;QAAhB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAA,wBACE,QAAC,QAAD;UAAU,UAAU,EAAEK;QAAtB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,WAAD;UAAa,MAAM,EAAExE,mBAArB;UAA0C,UAAU,EAAEE,eAAtD;UAAuE,SAAS,EAAEE,oBAAlF;UAAwG,OAAO,EAAEkC;QAAjH;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFc,eAYd,QAAC,gBAAD;MAAkB,MAAM,EAAE5C,sBAA1B;MAAkD,OAAO,EAAE4C,cAA3D;MAA2E,YAAY,EAAEG;IAAzF;MAAA;MAAA;MAAA;IAAA,QAZc,eAad,QAAC,eAAD;MAAiB,MAAM,EAAE3C,qBAAzB;MAAgD,OAAO,EAAEwC,cAAzD;MAAyE,cAAc,EAAEM;IAAzF;MAAA;MAAA;MAAA;IAAA,QAbc,eAcd,QAAC,aAAD;MAAe,MAAM,EAAEhD,mBAAvB;MAA4C,OAAO,EAAE0C,cAArD;MAAqE,UAAU,EAAE2B;IAAjF;MAAA;MAAA;MAAA;IAAA,QAdc,eAed,QAAC,aAAD;MACE,KAAK,EAAC,0DADR;MAEE,IAAI,EAAC,SAFP;MAGE,YAAY,EAAC,cAHf;MAIE,OAAO,EAAE3B,cAJX;MAKE,aAAa,EAAE;IALjB;MAAA;MAAA;MAAA;IAAA,QAfc,eAsBd,QAAC,UAAD;MAAY,IAAI,EAAEhC,YAAlB;MAAgC,OAAO,EAAEgC,cAAzC;MAAyD,MAAM,EAAE5B;IAAjE;MAAA;MAAA;MAAA;IAAA,QAtBc,eAuBd,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAvBc;EAAA;IAAA;IAAA;IAAA;EAAA,QADlB;AA2BD;;GA5MQpB,G;UAqBSjB,U;;;KArBTiB,G;AA8MT,qBAAehB,UAAU,CAACgB,GAAD,CAAzB"},"metadata":{},"sourceType":"module"}